<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wj.seven.dao.EngineerMapper">
  <resultMap id="BaseResultMap" type="com.wj.seven.common.domain.Engineer">
    <id column="engineer_id" jdbcType="VARCHAR" property="engineerId" />
    <result column="engineer_name" jdbcType="VARCHAR" property="engineerName" />
    <result column="engineer_status" jdbcType="INTEGER" property="engineerStatus" />
    <result column="engineer_remarks1" jdbcType="VARCHAR" property="engineerRemarks1" />
    <result column="engineer_remarks2" jdbcType="VARCHAR" property="engineerRemarks2" />
  </resultMap>
  <sql id="Base_Column_List">
    engineer_id, engineer_name, engineer_status, engineer_remarks1, engineer_remarks2
  </sql>

  <!-- 查询所有工程师 -->
<select id="findAll" resultMap="BaseResultMap">
  select
  <include refid="Base_Column_List" />
  from engineer where engineer_status =1
</select>

  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from engineer
    where engineer_id = #{engineerId,jdbcType=VARCHAR} and engineer =1
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from engineer
    where engineer_id = #{engineerId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.wj.seven.common.domain.Engineer">
    insert into engineer (engineer_id, engineer_name, engineer_status, 
      engineer_remarks1, engineer_remarks2)
    values (#{engineerId,jdbcType=VARCHAR}, #{engineerName,jdbcType=VARCHAR}, #{engineerStatus,jdbcType=INTEGER}, 
      #{engineerRemarks1,jdbcType=VARCHAR}, #{engineerRemarks2,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.wj.seven.common.domain.Engineer">
    insert into engineer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="engineerId != null">
        engineer_id,
      </if>
      <if test="engineerName != null">
        engineer_name,
      </if>
      <if test="engineerStatus != null">
        engineer_status,
      </if>
      <if test="engineerRemarks1 != null">
        engineer_remarks1,
      </if>
      <if test="engineerRemarks2 != null">
        engineer_remarks2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="engineerId != null">
        #{engineerId,jdbcType=VARCHAR},
      </if>
      <if test="engineerName != null">
        #{engineerName,jdbcType=VARCHAR},
      </if>
      <if test="engineerStatus != null">
        #{engineerStatus,jdbcType=INTEGER},
      </if>
      <if test="engineerRemarks1 != null">
        #{engineerRemarks1,jdbcType=VARCHAR},
      </if>
      <if test="engineerRemarks2 != null">
        #{engineerRemarks2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wj.seven.common.domain.Engineer">
    update engineer
    <set>
      <if test="engineerName != null">
        engineer_name = #{engineerName,jdbcType=VARCHAR},
      </if>
      <if test="engineerStatus != null">
        engineer_status = #{engineerStatus,jdbcType=INTEGER},
      </if>
      <if test="engineerRemarks1 != null">
        engineer_remarks1 = #{engineerRemarks1,jdbcType=VARCHAR},
      </if>
      <if test="engineerRemarks2 != null">
        engineer_remarks2 = #{engineerRemarks2,jdbcType=VARCHAR},
      </if>
    </set>
    where engineer_id = #{engineerId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wj.seven.common.domain.Engineer">
    update engineer
    set engineer_name = #{engineerName,jdbcType=VARCHAR},
      engineer_status = #{engineerStatus,jdbcType=INTEGER},
      engineer_remarks1 = #{engineerRemarks1,jdbcType=VARCHAR},
      engineer_remarks2 = #{engineerRemarks2,jdbcType=VARCHAR}
    where engineer_id = #{engineerId,jdbcType=VARCHAR}
  </update>
</mapper>